(()=>{"use strict";class e{constructor(){this.ships=[],this.missedAttacks=[],this.board=Array(10).fill().map((()=>Array(10).fill(null)))}placeShip(e,t,a){const[r,o]=t;for(let t=0;t<e.length;t++)"horizontal"===a?this.board[r][o+t]=e:this.board[r+t][o]=e;this.ships.push(e)}receiveAttack(e){const[t,a]=e,r=this.board[t][a];null===r?this.missedAttacks.push(e):r.hit()}areAllSunk(){return this.ships.every((e=>e.isSunk()))}}class t{constructor(t=!1){this.isComputer=t,this.gameboard=new e}makeMove(e,t){e.receiveAttack(t)}makeRandomMove(e){let t;do{t=[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}while(this.hasAlreadyAttacked(t));this.makeMove(e,t)}hasAlreadyAttacked(e){const[t,a]=e;return null!==this.gameboard.board[t][a]||this.gameboard.missedAttacks.some((e=>e[0]===t&&e[1]===a))}}class a{constructor(e){this.length=e,this.hits=0}hit(){this.hits+=1}isSunk(){return this.hits>=this.length}}const r=(()=>{const e=new t,r=new t(!0),o=e=>{e.gameboard.placeShip(new a(5),[0,0],"horizontal"),e.gameboard.placeShip(new a(4),[1,0],"horizontal")},s=(e,t)=>{t.innerHTML="";for(let e=0;e<10;e++)for(let a=0;a<10;a++){const r=document.createElement("div");r.classList.add("cell"),r.dataset.coordinates=`${e},${a}`,t.appendChild(r)}},i=t=>{const a=t.target.dataset.coordinates.split(",").map(Number);e.makeMove(r.gameboard,a),s(r.gameboard,document.querySelector("#player2-board")),r.gameboard.areAllSunk()?alert("Player 1 wins!"):(r.makeRandomMove(e.gameboard),s(e.gameboard,document.querySelector("#player1-board")),e.gameboard.areAllSunk()&&alert("Player 2 wins!"))};return{startGame:()=>{o(e),o(r),s(e.gameboard,document.querySelector("#player1-board")),s(r.gameboard,document.querySelector("#player2-board")),document.querySelector("#player2-board").addEventListener("click",i)}}})();document.addEventListener("DOMContentLoaded",(()=>{r.startGame()}))})();